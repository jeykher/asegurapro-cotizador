import React, { useState, useEffect } from 'react';
import Grid from '@mui/material/Grid';
import CardCompare from './subComponents/CardCompare';
import { useCotizaPageContext } from '../../../../context/CotizaPageContext/CotizaPageContext';
import CardCompareOptions from './subComponents/CardCompareOptions';
import CustomCarousel from '../../../../components/CustomCarousel/CustomCarousel';
import SectionAutoCompareHeaders from './sections/SectionAutoCompareHeaders';
import SectionAutoCompareDetails from './sections/SectionAutoCompareDetails';
import SectionHogarCompareHeaders from './sections/SectionHogarCompareHeaders';
import SectionHogarCompareDetails from './sections/SectionHogarCompareDetails';
import generateFraccionamientosAutoByPlan from '../../../../utils/generateFraccionamientosAutoByPlan';
import generateCoberturasAutoByPlan from '../../../../utils/generateCoberturasAutoByPlan';
import generateEdificacionesHogarByPlan from '../../../../utils/generateEdificacionesHogarByPlan';
import generateMobiliariosHogarByPlan from '../../../../utils/generateMobiliariosHogarByPlan';
import generateCoberturasHogarByPlan from '../../../../utils/generateCoberturasHogarByPlan';
import SectionViajeCompareHeaders from './sections/SectionViajeCompareHeaders';
import SectionViajeCompareDetails from './sections/SectionViajeCompareDetails';
import generateCoberturasViajeByPlan from '../../../../utils/generateCoberturasViajeByPlan';
import generateAgesViajeByPlan from '../../../../utils/generateAgesViajeByPlan';

const CompareInterface = () => {
    const [witdhInterface, setwitdhInterface] = useState(window.screen.width);
    const [itemShowOnCarousel, setitemShowOnCarousel] = useState(3);
    const { 
        plansCompareArray, 
        budgetCur: { AREA_NAME }, 
        fraccionamientosAutomovil, 
        coberturasAutomovil, 
        edificacionesHogar, 
        mobiliariosHogar,
        coberturasHogar,
        coberturasViajero,
        agesViajero
    } = useCotizaPageContext();

    console.log(2,plansCompareArray)
    useEffect(() => {
        window.onresize = () => {
            setwitdhInterface(window.screen.width);
            if(window.screen.width > 1270) {
                setitemShowOnCarousel(3);   
            }
            if(window.screen.width >= 940 && window.screen.width <= 1270) {
                setitemShowOnCarousel(2);
            }
            if(window.screen.width >= 900 && window.screen.width <= 940) {
                setitemShowOnCarousel(1);
            }
            if(window.screen.width >= 715 && window.screen.width <= 900) {
                setitemShowOnCarousel(2);
            }
            if(window.screen.width < 715) {
                setitemShowOnCarousel(1);
            }
        };
    }, [witdhInterface]);
    return (
        <>
            <Grid container sx={{
                height: '100%',
                padding: '1rem 0'
            }}>
                <Grid item xs={12} sm={12} md={3}>
                    <Grid container sx={{
                        display: 'flex',
                        justifyContent: 'center'
                    }}>
                        <CardCompareOptions />
                        {
                            AREA_NAME === 'AUTOMOVIL'
                                ? ( 
                                    <SectionAutoCompareHeaders />
                                )
                                : (
                                    null
                                )
                        }
                        {
                            AREA_NAME === 'HOGAR'
                                ? ( 
                                    <SectionHogarCompareHeaders />
                                )
                                : (
                                    null
                                )
                        }
                        {
                            AREA_NAME === 'VIAJE'
                                ? ( 
                                    <SectionViajeCompareHeaders />
                                )
                                : (
                                    null
                                )
                        }
                    </Grid>
                </Grid>
                <Grid item xs={12} sm={12} md={9} sx={{
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                    padding: '0 1rem'
                }}> 
                    <CustomCarousel itemsToShow={itemShowOnCarousel}>
                        {
                            plansCompareArray.map(plan => {
                                const { plan_id, descplanprod, codmoneda, prima, fraccionamiento } = plan;
                                let fraccionamientosAutoGenerated = [];
                                let coberturasAutoGenerated = [];
                                let edificacionesHogarGenerated = [];
                                let mobiliariosHogarGenerated = [];
                                let coberturasHogarGenerated = [];
                                let agesViajeGenerated = [];
                                let coberturasViajeGenerated = [];
                                switch(AREA_NAME) {
                                    case "AUTOMOVIL":
                                        fraccionamientosAutoGenerated = generateFraccionamientosAutoByPlan(plan, fraccionamientosAutomovil);
                                        coberturasAutoGenerated = generateCoberturasAutoByPlan(plan, coberturasAutomovil);
                                        break;
                                    case "HOGAR":
                                        edificacionesHogarGenerated = generateEdificacionesHogarByPlan(plan, edificacionesHogar);
                                        mobiliariosHogarGenerated = generateMobiliariosHogarByPlan(plan, mobiliariosHogar);
                                        coberturasHogarGenerated = generateCoberturasHogarByPlan(plan, coberturasHogar);
                                        break;
                                    case "VIAJE":
                                        agesViajeGenerated = generateAgesViajeByPlan(plan, agesViajero);
                                        coberturasViajeGenerated = generateCoberturasViajeByPlan(plan, coberturasViajero);
                                    default:
                                        break;
                                }
                                return(
                                    <>
                                        <div>
                                            <div>
                                                <CardCompare 
                                                    plan_id={plan_id}
                                                    descplanprod={descplanprod} 
                                                    codmoneda={codmoneda}
                                                    prima={prima}
                                                    fraccionamiento={fraccionamiento}
                                                />  
                                            </div>
                                            {
                                                AREA_NAME === 'AUTOMOVIL'
                                                    ? ( 
                                                        <SectionAutoCompareDetails 
                                                            fraccionamientosAutoGenerated={fraccionamientosAutoGenerated}
                                                            coberturasAutoGenerated={coberturasAutoGenerated}
                                                        />
                                                    )
                                                    : (
                                                        null
                                                    )
                                            }
                                            {
                                                AREA_NAME === 'HOGAR'
                                                    ? ( 
                                                        <SectionHogarCompareDetails 
                                                            edificacionesHogarGenerated={edificacionesHogarGenerated}
                                                            mobiliariosHogarGenerated={mobiliariosHogarGenerated}
                                                            coberturasHogarGenerated={coberturasHogarGenerated}
                                                        />
                                                    )
                                                    : (
                                                        null
                                                    )
                                            }
                                            {
                                                AREA_NAME === 'VIAJE'
                                                    ? ( 
                                                        <SectionViajeCompareDetails 
                                                            agesViajeGenerated={agesViajeGenerated}
                                                            coberturasViajeGenerated={coberturasViajeGenerated}
                                                        />
                                                    )
                                                    : (
                                                        null
                                                    )
                                            }
                                        </div>
                                    </>
                                )
                            })
                        }
                    </CustomCarousel>
                </Grid>
            </Grid>
        </>
    );
};

export default CompareInterface;